version: 2

jobs:

    clone:
        docker:
            - image: cyclus/cyclus-deps
        working_directory: ~/
        steps:
            - run: 
                name: clone cyclus
                command:
                    git clone http://github.com/cyclus/cyclus
                    git clone http://github.com/cyclus/cycamore 
    # Build Cyclus
    build:
        docker:
            - image: cyclus/cyclus-deps
        working_directory: ~/cyclus
        steps:
            # Ensure your image has git (required by git to clone via SSH) so that CircleCI can clone your repo
            - run: apt-get -qq update; apt-get -y install git openssh-client
            - checkout
            - run:
                name: check
                command:
                    cd
            - run:
                name: Build Docker Image
                command: |
                    python install.py -j 2 --build-type=Release --core-version 999999.999999 \
                    -DBLAS_LIBRARIES="/opt/conda/lib/libblas.so" \
                    -DLAPACK_LIBRARIES="/opt/conda/lib/liblapack.so"
            - run:
                name: save SHA to a file
                command: echo $CIRCLE_SHA1 > .circle-sha
            - save_cache:
                key: v1-repo-{{ checksum ".circle-sha" }}
                paths:
                  - /root
    cyc:
        docker:
            - image: cyclus/cyclus-deps
        working_directory: ~/cycamore
        steps:
            # Ensure your image has git (required by git to clone via SSH) so that CircleCI can clone your repo
            - run:
                name: Build Docker Image
                command: |
                    python install.py 


    d3ploy_build:
        docker:
            - image: cyclus/cyclus-deps
        working_directory: ~/
        steps:
            - run:
                name: build d3ploy
                command: |
                    python setup.py install
    
    unit_test:
        docker:
            - image: cyclus/cyclus-deps
        working_directory: ~/tests
        steps:
            - run:
                name: solver unit tests
                command: pytest solver_unit_tests.py
